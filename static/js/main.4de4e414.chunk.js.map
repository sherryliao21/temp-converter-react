{"version":3,"sources":["components/Header.js","components/Form.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","marginLeft","Form","onConvert","useState","degree","setDegree","type","setType","onSubmit","event","preventDefault","trim","alert","htmlFor","id","name","value","onChange","e","target","required","Result","result","disabled","App","setResult","input","output","Number","parseFloat","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAWeA,EARA,WACb,OACE,8BACE,qBAAIC,UAAU,QAAd,kCAA2C,cAAC,IAAD,CAAmBC,MAAO,CAAEC,WAAY,gBC6C1EC,EA/CF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACd,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAyBA,OACE,uBAAMC,SAxBS,SAACC,GAEhBA,EAAMC,iBAEDN,EAAOO,OAIU,kBAAXP,EAINE,GAAiB,YAATA,GAKbJ,EAAU,CAAEE,SAAQE,SAEpBD,EAAU,IACVE,EAAQ,KAPNK,MAAM,uCAJNA,MAAM,yBAJNA,MAAM,0BAmBR,UACE,sBAAKd,UAAU,eAAf,UACE,uBAAOe,QAAQ,UAAf,qBACA,uBAAOP,KAAK,SAASQ,GAAG,UAAUC,KAAK,UAAUC,MAAOZ,EAAQa,SAAU,SAACC,GAAD,OAAOb,EAAUa,EAAEC,OAAOH,QAAQlB,UAAU,OAAOsB,UAAQ,OAEvI,sBAAKtB,UAAU,eAAf,UACE,uBAAOe,QAAQ,OAAf,kBACA,yBAAQE,KAAK,OAAOD,GAAG,OAAOhB,UAAU,cAAckB,MAAOV,EAAMW,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOH,QAAQI,UAAQ,EAArH,UACE,wBAAQJ,MAAM,UAAUD,KAAK,OAA7B,wBACA,wBAAQC,MAAM,aAAaD,KAAK,OAAhC,wBACA,wBAAQC,MAAM,UAAUD,KAAK,OAA7B,qBACA,wBAAQC,MAAM,SAASD,KAAK,OAA5B,0BAGJ,uBAAOT,KAAK,SAASR,UAAU,MAAMkB,MAAM,gBCnClCK,EATA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,sBAAKxB,UAAU,sBAAf,UACE,uBAAOe,QAAQ,SAAf,oBACA,uBAAOP,KAAK,OAAOR,UAAU,cAAckB,MAAQM,EAASC,UAAQ,QC0B3DC,MA3Bf,WACE,MAA8BrB,mBAAS,IAAvC,mBAAQmB,EAAR,KAAgBG,EAAhB,KAiBA,OACE,sBAAK3B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMI,UAnBM,SAACwB,GAEf,GAAmB,eAAfA,EAAMpB,KAAuB,CAC/B,IAAMqB,EAAuC,GAA7BC,OAAOF,EAAMtB,QAAU,IAAU,EACjDqB,EAAUG,OAAOC,WAAWF,GAAQG,QAAQ,GAAK,cAE5C,GAAmB,YAAfJ,EAAMpB,KAAoB,CACnC,IAAMqB,EAAiC,EAAvBC,OAAOF,EAAMtB,QAAc,EAAK,GAChDqB,EAAUG,OAAOC,WAAWF,GAAQG,QAAQ,GAAK,aAE5C,CACL,IAAMH,EAAUC,OAAOF,EAAMtB,QAAUyB,WAAW,QAClDJ,EAAUG,OAAOC,WAAWF,GAAQG,QAAQ,GAAI,aAQhD,cAAC,EAAD,CAAQR,OAASA,QCfRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4de4e414.chunk.js","sourcesContent":["import React from 'react'\nimport { FaTemperatureHigh } from 'react-icons/fa'\n\nconst Header = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Temperature Converter<FaTemperatureHigh style={{ marginLeft: '20px'}}/></h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { useState } from 'react'\n\n\nconst Form = ({ onConvert }) => {\n  const [degree, setDegree] = useState('')\n  const [type, setType] = useState('')\n\n  const onSubmit = (event) => {\n    // prevent actually submitting to a page\n    event.preventDefault()\n    // form validation\n    if (!degree.trim()) {\n      alert('Please enter degrees!')\n      return\n    }\n    if (typeof degree === 'number') {\n      alert('Please input numbers!')\n      return\n    }\n    if (!type || type === 'default') {\n      alert('Please select one temperature type!')\n      return\n    }\n\n    onConvert({ degree, type })\n\n    setDegree('')\n    setType('')\n  }\n\n  return (\n    <form onSubmit={ onSubmit }>\n      <div className=\"form-control\">\n        <label htmlFor=\"degrees\">Degrees</label>\n        <input type=\"number\" id=\"degrees\" name=\"degrees\" value={degree} onChange={(e) => setDegree(e.target.value)} className=\"form\" required/>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"type\">Type</label>\n        <select name=\"type\" id=\"type\" className=\"form-select\" value={type} onChange={(e) => setType(e.target.value)} required>\n          <option value=\"default\" name=\"type\">Select One</option>\n          <option value=\"Fahrenheit\" name=\"type\">Fahrenheit</option>\n          <option value=\"Celsius\" name=\"type\">Celsius</option>\n          <option value=\"Kelvin\" name=\"type\">Kelvin</option>\n        </select>\n      </div>\n      <input type=\"submit\" className='btn' value=\"Convert\"/>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Result = ({ result }) => {\n  return (\n    <div className=\"form-control result\">\n      <label htmlFor=\"result\">Result</label>\n      <input type=\"text\" className=\"form-result\" value={ result } disabled/>\n    </div>\n  )\n}\n\nexport default Result\n","import Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Result from \"./components/Result\";\nimport { useState } from \"react\"\n\nfunction App() {\n  const [ result, setResult ] = useState('')\n  const convert = (input) => {\n    // console.log(input)\n    if (input.type === 'Fahrenheit') {\n      const output = (Number(input.degree) - 32) * 5 / 9\n      setResult(Number.parseFloat(output).toFixed(4) + '°C')\n      // console.log(Number.parseFloat(output).toFixed(4) + '°C')\n    } else if (input.type === 'Celsius') {\n      const output = (Number(input.degree) * 9 / 5) + 32\n      setResult(Number.parseFloat(output).toFixed(4) + '°F')\n      // console.log(Number.parseFloat(output).toFixed(4) + '°F')\n    } else {\n      const output = (Number(input.degree) - parseFloat(273.15))\n      setResult(Number.parseFloat(output).toFixed(4) +'°C' )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Form onConvert={ convert }/>\n      <Result result={ result }/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}